<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.free.badmood.blackhole.web.mapper.CommentMapper">


    <resultMap id="userCommentVo" type="com.free.badmood.blackhole.web.entity.UserCommentVo">


        <id property="id" column="id" javaType="long"/>
        <result property="createTime" column="create_time" javaType="java.util.Date"/>
        <result property="updateTime" column="update_time" javaType="java.util.Date"/>
        <result property="del" column="del" javaType="int"/>
        <result property="articleId" column="article_id" javaType="long"/>
        <result property="articleType" column="article_type" javaType="java.lang.String"/>
        <result property="content" column="content" javaType="java.lang.String"/>
        <result property="fromUserId" column="from_user_id" javaType="long"/>
        <result property="nickName" column="nick_name" javaType="java.lang.String"/>
        <result property="avatarUrl" column="avatar_url" javaType="java.lang.String"/>
        <result property="replyCount" column="reply_count" javaType="int"/>
        <association property="supportCount" column="id" javaType="java.lang.Integer" select="selectSupportCount"/>


    </resultMap>

    <select id="selectSupportCount" resultType="int">
        select count(1) from t_f_support where type_id = #{commentId} and type = 1
    </select>


    <select id="queryUserComment" resultMap="userCommentVo">

        SELECT c.id as id ,
        c.create_time ,
        c.update_time ,
        c.del as del,
        c.article_id ,
        c.article_type,
        c.content,
        c.from_user_id,
        count(reply_id) as reply_count,u.avatar_url,u.nick_name
        from t_f_comment c
            LEFT JOIN
                t_f_reply r
            on (r.comment_id = c.id and r.reply_type = 0)
            LEFT JOIN
                t_f_user u
            on
                u.id = c.from_user_id
        where
            c.del = 0
            and c.article_id = #{articleId}
            and  c.article_type = "normal"
        GROUP BY IFNULL(reply_id,UUID())

        order by create_time desc


    </select>
</mapper>
